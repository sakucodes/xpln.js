export const prefix="xpln";const xplnSelector="[data-xpln]",xplnStepAttr="data-xpln-step",xplnBoxSelector="[data-xpln-box]",xplnBoxContentSelector="[data-xpln-content]",xplnBoxCloseBtnSelector="[data-xpln-close]",prevBtnSelector="[data-xpln-prev]",nextBtnSelector="[data-xpln-next]",minDelay=120,padding=10,defaultBoxHtml='<div class="card text-dark bg-light mb-3" data-xpln-box>\n<div class="card-header">Tipp <a href="#" class="btn" data-xpln-close>x</a></div>\n<div class="card-body">\n    <p class="card-text" data-xpln-content></p>\n</div>\n<div class="card-footer bg-transparent border-success">\n    <button class="btn btn-primary" data-xpln-prev>Prev</button>\n    <button class="btn btn-primary" data-xpln-next>Next</button>\n</div>\n</div>';class xpln{bodyElem=null;highlightElem=null;xplnBoxElem=null;activeXplnElem=null;xplnList=[];activeIndex=0;xplnBoxDelay=0;popperInstance=null;initialized=!1;options={delay:0,disableActiveElem:!1};constructor(){}init(options){this.initialized||(options&&(this.options={...this.options,...options}),this.options.delay&&(this.xplnBoxDelay=Math.max(120,options.delay)),this.body=document.getElementsByTagName("body")[0],this.xplnList=[...document.querySelectorAll(xplnSelector)].sort((a,b)=>a.getAttribute(xplnStepAttr)-b.getAttribute(xplnStepAttr)),this._init_highlight(),this._init_box(),this.popperInstance=Popper.createPopper(this.highlightElem,this.xplnBoxElem,{placement:"auto",modifiers:[{name:"offset",options:{offset:[0,10]}}]}),this.initialized=!0)}show(){if(!this.initialized||!this.xplnList)return;this.activeXplnElem&&this.activeXplnElem.removeAttribute("data-xpln-elem");const elem=this.xplnList[this.activeIndex];if(!elem)return;const clientRect=elem.getClientRects()[0];this.highlightElem.style.left=clientRect.left-10+"px",this.highlightElem.style.top=clientRect.top-10+"px",this.highlightElem.style.height=clientRect.height+20+"px",this.highlightElem.style.width=clientRect.width+20+"px",this.highlightElem.setAttribute("data-xpln-show",""),this.activeXplnElem=elem,this._update_tooltip(),this._update_buttons(),setTimeout(()=>{this.popperInstance.update(),this.xplnBoxElem.setAttribute("data-xpln-show",""),this.options.disableActiveElem||this.activeXplnElem.setAttribute("data-xpln-elem","")},this.xplnBoxDelay)}hide(){this.xplnBoxElem.removeAttribute("data-xpln-show"),this.highlightElem.removeAttribute("data-xpln-show"),this.activeXplnElem&&(this.activeXplnElem.removeAttribute("data-xpln-elem"),this.activeXplnElem=null),this.activeIndex=0}clean(){this.hide(),this.body.removeChild(this.highlightElem),this.body.removeChild(this.tooltipElem),this.initialized=!1}_init_highlight(){this.highlightElem=document.createElement("div"),this.highlightElem.setAttribute("id","xpln-highlight"),this.highlightElem.style.setProperty("--delay",this.xplnBoxDelay+"ms"),this.body.appendChild(this.highlightElem)}_init_box(){if(this.xplnBoxElem=document.querySelector(xplnBoxSelector),!this.xplnBoxElem){let box=document.createElement("div");box.innerHTML=defaultBoxHtml,box=box.firstChild,box.classList.add("xpln-tooltip"),this.xplnBoxElem=box,this.body.appendChild(box)}this._init_buttons()}_init_buttons(){const closeBtns=this.xplnBoxElem.querySelectorAll("[data-xpln-close]");if(closeBtns&&closeBtns.length>0)for(const btn of closeBtns)btn.addEventListener("click",()=>{this.hide()});const prevBtn=this.xplnBoxElem.querySelector(prevBtnSelector);prevBtn&&prevBtn.addEventListener("click",()=>{this.xplnBoxElem.removeAttribute("data-xpln-show"),this.activeIndex=Math.max(this.activeIndex-1,0),this.show()});const nextBtn=this.xplnBoxElem.querySelector(nextBtnSelector);nextBtn&&(nextBtn.setAttribute("disabled",this.activeIndex+1>=this.xplnList.length),nextBtn.addEventListener("click",()=>{this.xplnBoxElem.removeAttribute("data-xpln-show"),this.activeIndex=Math.min(this.activeIndex+1,this.xplnList.length),this.show()})),this._update_buttons()}_update_tooltip(){const text=this.activeXplnElem.getAttribute("data-xpln"),tooltipTextElem=this.xplnBoxElem.querySelector("[data-xpln-content]");tooltipTextElem.innerHTML=text}_update_buttons(){const prevBtn=this.xplnBoxElem.querySelector(prevBtnSelector),nextBtn=this.xplnBoxElem.querySelector(nextBtnSelector);this.activeIndex<=0?prevBtn.setAttribute("disabled",""):prevBtn.removeAttribute("disabled"),this.activeIndex+1>=this.xplnList.length?nextBtn.setAttribute("disabled",""):nextBtn.removeAttribute("disabled")}}export default new xpln;